#!/bin/bash
set -e
shopt -s inherit_errexit

#Title
declare title=$(cat << EOS
MincraftServer Deploy Tool

     .S_SSSs    S.       .S_SSSs     sdSSSSSSSbs   .S    sSSs
    .SS~SSSSS   SS.     .SS~SSSSS    YSSSSSSSS%S  .SS   d%%SP
    S%S   SSSS  S%S     S%S   SSSS          S%S   S%S  d%S'
    S%S    S%S  S%S     S%S    S%S         S&S    S%S  S%S
    S%S SSSS%S  S&S     S%S SSSS%S        S&S     S&S  S&S
    S&S  SSS%S  S&S     S&S  SSS%S        S&S     S&S  S&S_Ss
    S&S    S&S  S&S     S&S    S&S       S&S      S&S  S&S~SP
    S&S    S&S  S&S     S&S    S&S      S*S       S&S  S&S
    S*S    S&S  S*b     S*S    S&S     S*S        S*S  S*b
    S*S    S*S  S*S.    S*S    S*S   .s*S         S*S  S*S
    S*S    S*S   SSSbs  S*S    S*S   sY*SSSSSSSP  S*S  S*S
    SSS    S*S    YSSP  SSS    S*S  sY*SSSSSSSSP  S*S  S*S
           SP                  SP                 SP   SP
           Y                   Y                  Y    Y

                                                      for bash
                 Installation preparation start
                        C-c to cancel

EOS
)

#ResetScreen
alreset(){
	clear
	echo "$title"
}

#EndScript
alend(){
cat << EOS

Initial setting is completed,
please read readme.txt for operation method.

EOS
read -p "Enter to exit."
clear
}

#Config file
conf_gen(){
local conf=$(cat << EOS
#
# conf - here document string
#
CONF=`pwd`
JRE='`which java`'
ARG='-Xms2G -Xmx4G'
PORT_MIN=50000
PORT_MAX=60000
WAIT=30

#END OF FILE
EOS
)
echo "${conf}" > core/conf
}

#start up
start_up(){
	local -a APT_LIST
	local -r LIB="lib"
	local -r SLIB="slib"
	local org
	org=`pwd`

	wget "https://github.com/FizzFizzGit/alazif/releases/download/v0.2pip/lib" --quiet
	source ./$LIB
	echo "*First boot setting*"
	home=$(dir_dialog)
	mkdir $home/conf $home/core
	mv ./$LIB $home/core
	cd $home
	wget "https://github.com/FizzFizzGit/alazif/releases/download/v0.2pip/confconf.sh" --quiet
	wget "https://github.com/FizzFizzGit/alazif/releases/download/v0.2pip/mcmake.sh" --quiet
	wget "https://github.com/FizzFizzGit/alazif/releases/download/v0.2pip/run.sh" --quiet
	wget "https://github.com/FizzFizzGit/alazif/releases/download/v0.2pip/README.md" --quiet
	conf_gen
	chmod a+x confconf.sh mcmake.sh run.sh
	cd $home/core
	wget "https://github.com/FizzFizzGit/alazif/releases/download/v0.2pip/slib" --quiet
	source ./$SLIB
	touch log
	cd $home

	alreset
	read -p "Do an availability check.Press Enter."
	APT_LIST+=(`apt_install_dialog -w jre-headless -t JRE`)
	alreset
	APT_LIST+=(`apt_install_dialog -w ^screen/ -t screen`)
	alreset
	APT_LIST+=(`apt_install_dialog -w ^ufw/ -t ufw`)
	alreset
	apt_list_installer APT_LIST

	alreset
	read -ep "Would you like to create the environment now?[Y/n] : " yn
	case $yn in
	[Yy])
		alreset
		bash confconf.sh -n ${home##*/}
		alreset
		bash mcmake.sh ${home##*/} create -- --
	esac

	alreset
	alend
	cd $org
	rm alazif

}

#start
on_error(){
	echo "[Err] ${BASH_SOURCE[1]}:${BASH_LINENO} - '${BASH_COMMAND}' failed" 1>&2
	exit
}
trap on_error ERR

#guard syntax
if [ -f ./core/conf ]; then echo "It works only when you start it for the first time."; exit; fi
start_up
